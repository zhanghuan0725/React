{"ast":null,"code":"// 容器组件\n// 引入count组件的UI组件\nimport CountUI from \"../../components/Count\";\nimport { creactIncrementAction } from '../../redux/count_action'; // 引入redux中最为重要的store,需要在APP.js中引入，不能直接引入\n// import store  from \"../../redux/store\";\n// 引入connect用于连接UI组件与redux\n\nimport { connect } from \"react-redux\"; //connect是一个函数，它调用的返回值也是函数\n// const CountContainer = connect()(CountUI)\n// export default CountContainer\n//a函数的返回值作为状态传递给了UI组件\n//a函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value----状态\n\nfunction mapStateToProps(state) {\n  return {\n    count: state\n  };\n} //b函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value----操作状态的方法\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    add: number => {\n      // 通知redux执行加法\n      // dispatch({type:'increment',data:number})\n      dispatch(creactIncrementAction(number));\n    }\n  };\n} //使用connect()()创建并暴露一个Count的容器组件\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountUI);","map":{"version":3,"sources":["E:/2022react/redux_test/src/containers/Count/index.jsx"],"names":["CountUI","creactIncrementAction","connect","mapStateToProps","state","count","mapDispatchToProps","dispatch","add","number"],"mappings":"AAAA;AACA;AACA,OAAOA,OAAP,MAAoB,wBAApB;AACA,SAAQC,qBAAR,QAAoC,0BAApC,C,CAEA;AACA;AAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;AACA;AAEA;AAEA;AACA;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAC3B,SAAO;AAACC,IAAAA,KAAK,EAACD;AAAP,GAAP;AACH,C,CACD;;;AACA,SAASE,kBAAT,CAA4BC,QAA5B,EAAqC;AACjC,SAAO;AAACC,IAAAA,GAAG,EAAEC,MAAD,IAAU;AAClB;AACA;AACAF,MAAAA,QAAQ,CAACN,qBAAqB,CAACQ,MAAD,CAAtB,CAAR;AACH;AAJM,GAAP;AAKH,C,CACD;;;AACA,eAAeP,OAAO,CAACC,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CN,OAA5C,CAAf","sourcesContent":["// 容器组件\r\n// 引入count组件的UI组件\r\nimport CountUI from \"../../components/Count\";\r\nimport {creactIncrementAction} from '../../redux/count_action'\r\n\r\n// 引入redux中最为重要的store,需要在APP.js中引入，不能直接引入\r\n// import store  from \"../../redux/store\";\r\n\r\n// 引入connect用于连接UI组件与redux\r\nimport { connect } from \"react-redux\";\r\n\r\n//connect是一个函数，它调用的返回值也是函数\r\n// const CountContainer = connect()(CountUI)\r\n\r\n// export default CountContainer\r\n\r\n//a函数的返回值作为状态传递给了UI组件\r\n//a函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value----状态\r\nfunction mapStateToProps(state){\r\n    return {count:state}\r\n}\r\n//b函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value----操作状态的方法\r\nfunction mapDispatchToProps(dispatch){\r\n    return {add:(number)=>{\r\n        // 通知redux执行加法\r\n        // dispatch({type:'increment',data:number})\r\n        dispatch(creactIncrementAction(number))\r\n    }}\r\n}\r\n//使用connect()()创建并暴露一个Count的容器组件\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CountUI)\r\n"]},"metadata":{},"sourceType":"module"}