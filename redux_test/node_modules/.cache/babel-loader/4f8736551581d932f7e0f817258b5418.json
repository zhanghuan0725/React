{"ast":null,"code":"var _jsxFileName = \"E:\\\\2022react\\\\react_extension\\\\src\\\\component\\\\3.hooks\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom'; // 类式组件\n//   class Demo extends Component {\n//     state={\n//         count:0\n//     }\n//     myRef = React.createRef()\n//     add=()=>{\n//         this.setState(state=>({count:state.count+1}))\n//     }\n//     unmount=()=>{\n//         ReactDOM.unmountComponentAtNode(document.getElementById('root'))\n//     }\n//     show=()=>{\n//         alert(this.myRef.current.value)\n//     }\n//     componentDidMount(){\n//         this.timer = setInterval(()=>{\n//             this.setState(state=>({count:state.count+1}))\n//         },1000)\n//     }\n//     componentWillUnmount(){\n//         clearInterval(this.timer)\n//     }\n//   render() {\n//     return (\n//       <div>\n//           <input type='text' ref={this.myRef}/>\n//           <h2>当前求和为{this.state.count}</h2>\n//           <button onClick={this.add}>点我+1</button>\n//           <button onClick={this.unmount}>卸载组件</button>\n//           <button onClick={this.show}>点击提示数据</button>\n//       </div>\n//     )\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Demo() {\n  _s();\n\n  console.log('Demo');\n  const [count, setCount] = React.useState(0);\n  const myRef = React.useRef(); // const [name,setName] = React.useState('tom')\n  //相当于生命周期钩子函数，[count]代表只监测count，[]相当于componentDidMount\n\n  React.useEffect(() => {\n    // console.log('@@@')\n    let timer = setInterval(() => {\n      setCount(count => count + 1);\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []); // console.log(count,setCount);\n  // 加的回调\n\n  function add() {\n    // setCount(count+1)//第一种写法\n    setCount(count => count + 1); // console.log('你点击了加号');\n  } // 卸载组件的回调\n\n\n  function unmount() {\n    ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n  } //提示输入的回调\n\n\n  function show() {\n    alert(myRef.current.value);\n  } // function changeName(){\n  //     setName('jack')\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: myRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: add,\n      children: \"\\u70B9\\u6211+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: unmount,\n      children: \"\\u5378\\u8F7D\\u7EC4\\u4EF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: show,\n      children: \"\\u70B9\\u51FB\\u63D0\\u793A\\u6570\\u636E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 16\n  }, this);\n}\n\n_s(Demo, \"X8nl+5JKyloJF339QJ2dT7pYVSU=\");\n\n_c = Demo;\nexport default Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["E:/2022react/react_extension/src/component/3.hooks/index.jsx"],"names":["React","Component","ReactDOM","Demo","console","log","count","setCount","useState","myRef","useRef","useEffect","timer","setInterval","clearInterval","add","unmount","unmountComponentAtNode","document","getElementById","show","alert","current","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AAEA,SAASC,IAAT,GAAe;AAAA;;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBP,KAAK,CAACQ,QAAN,CAAe,CAAf,CAAzB;AACA,QAAMC,KAAK,GAAGT,KAAK,CAACU,MAAN,EAAd,CAHW,CAIX;AAEA;;AACAV,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAI;AAChB;AACA,QAAIC,KAAK,GAAGC,WAAW,CAAC,MAAI;AACxBN,MAAAA,QAAQ,CAACD,KAAK,IAAEA,KAAK,GAAC,CAAd,CAAR;AACH,KAFsB,EAErB,IAFqB,CAAvB;AAGA,WAAO,MAAI;AACPQ,MAAAA,aAAa,CAACF,KAAD,CAAb;AACH,KAFD;AAIH,GATD,EASE,EATF,EAPW,CAkBX;AACA;;AACA,WAASG,GAAT,GAAc;AACV;AACAR,IAAAA,QAAQ,CAACD,KAAK,IAAGA,KAAK,GAAC,CAAf,CAAR,CAFU,CAGV;AACH,GAxBU,CAyBX;;;AACA,WAASU,OAAT,GAAkB;AACdd,IAAAA,QAAQ,CAACe,sBAAT,CAAgCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC;AACH,GA5BU,CA6BX;;;AACA,WAASC,IAAT,GAAe;AACXC,IAAAA,KAAK,CAACZ,KAAK,CAACa,OAAN,CAAcC,KAAf,CAAL;AACH,GAhCU,CAiCX;AACA;AACA;;;AACA,sBACW;AAAA,4BACG;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAEd;AAAxB;AAAA;AAAA;AAAA;AAAA,YADH,eAEG;AAAA,mDAAUH,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,eAIG;AAAQ,MAAA,OAAO,EAAES,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJH,eAKG;AAAQ,MAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALH,eAMG;AAAQ,MAAA,OAAO,EAAEI,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADX;AAWH;;GA/CQjB,I;;KAAAA,I;AAgDT,eAAeA,IAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n// 类式组件\r\n//   class Demo extends Component {\r\n//     state={\r\n//         count:0\r\n//     }\r\n//     myRef = React.createRef()\r\n//     add=()=>{\r\n//         this.setState(state=>({count:state.count+1}))\r\n//     }\r\n//     unmount=()=>{\r\n//         ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n//     }\r\n//     show=()=>{\r\n//         alert(this.myRef.current.value)\r\n//     }\r\n//     componentDidMount(){\r\n//         this.timer = setInterval(()=>{\r\n//             this.setState(state=>({count:state.count+1}))\r\n//         },1000)\r\n//     }\r\n//     componentWillUnmount(){\r\n//         clearInterval(this.timer)\r\n//     }\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//           <input type='text' ref={this.myRef}/>\r\n//           <h2>当前求和为{this.state.count}</h2>\r\n//           <button onClick={this.add}>点我+1</button>\r\n//           <button onClick={this.unmount}>卸载组件</button>\r\n//           <button onClick={this.show}>点击提示数据</button>\r\n\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\nfunction Demo(){\r\n    console.log('Demo');\r\n    const [count,setCount] = React.useState(0)\r\n    const myRef = React.useRef()\r\n    // const [name,setName] = React.useState('tom')\r\n\r\n    //相当于生命周期钩子函数，[count]代表只监测count，[]相当于componentDidMount\r\n    React.useEffect(()=>{\r\n        // console.log('@@@')\r\n        let timer = setInterval(()=>{\r\n            setCount(count=>count+1)\r\n        },1000)\r\n        return ()=>{\r\n            clearInterval(timer)\r\n        }\r\n       \r\n    },[])\r\n\r\n    // console.log(count,setCount);\r\n    // 加的回调\r\n    function add(){\r\n        // setCount(count+1)//第一种写法\r\n        setCount(count=> count+1)\r\n        // console.log('你点击了加号');\r\n    }\r\n    // 卸载组件的回调\r\n    function unmount(){\r\n        ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n    }\r\n    //提示输入的回调\r\n    function show(){\r\n        alert(myRef.current.value)\r\n    }\r\n    // function changeName(){\r\n    //     setName('jack')\r\n    // }\r\n    return (\r\n               <div>\r\n                  <input type='text' ref={myRef}/>\r\n                  <h2>当前求和为{count}</h2>\r\n                  {/* <h2>我的名字是：{name}</h2> */}\r\n                  <button onClick={add}>点我+1</button>\r\n                  <button onClick={unmount}>卸载组件</button>\r\n                  <button onClick={show}>点击提示数据</button>\r\n                  {/* <button onClick={changeName}>点我改名</button> */}\r\n              </div>\r\n             )\r\n}\r\nexport default Demo\r\n"]},"metadata":{},"sourceType":"module"}