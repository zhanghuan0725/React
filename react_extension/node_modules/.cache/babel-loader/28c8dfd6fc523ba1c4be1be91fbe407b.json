{"ast":null,"code":"var _jsxFileName = \"E:\\\\2022react\\\\react_extension\\\\src\\\\component\\\\3.hooks\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react'; // 类式组件\n//   class Demo extends Component {\n//     state={\n//         count:0\n//     }\n//     add=()=>{\n//         this.setState(state=>({count:state.count+1}))\n//     }\n//     componentDidMount(){\n//         setInterval(()=>{\n//             this.setState(state=>({count:state.count+1}))\n//         },1000)\n//     }\n//   render() {\n//     return (\n//       <div>\n//           <h2>当前求和为{this.state.count}</h2>\n//           <button onClick={this.add}>点我+1</button>\n//       </div>\n//     )\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Demo() {\n  _s();\n\n  console.log('Demo');\n  const [count, setCount] = React.useState(0); // const [name,setName] = React.useState('tom')\n  //相当于生命周期钩子函数，[count]代表只监测count，[]相当于componentDidMount\n\n  React.useEffect(() => {\n    // console.log('@@@')\n    setInterval(() => {\n      setCount(count => count + 1);\n    }, 1000);\n  }, []); // console.log(count,setCount);\n  // 加的回调\n\n  function add() {\n    // setCount(count+1)//第一种写法\n    setCount(count => count + 1); // console.log('你点击了加号');\n  } // function changeName(){\n  //     setName('jack')\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: add,\n      children: \"\\u70B9\\u6211+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 16\n  }, this);\n}\n\n_s(Demo, \"f6rNyXb4nKr8df0VUP2jADfsx6o=\");\n\n_c = Demo;\nexport default Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["E:/2022react/react_extension/src/component/3.hooks/index.jsx"],"names":["React","Component","Demo","console","log","count","setCount","useState","useEffect","setInterval","add"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,IAAT,GAAe;AAAA;;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,KAAK,CAACO,QAAN,CAAe,CAAf,CAAzB,CAFW,CAGX;AAEA;;AACAP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAI;AAChB;AACAC,IAAAA,WAAW,CAAC,MAAI;AACZH,MAAAA,QAAQ,CAACD,KAAK,IAAEA,KAAK,GAAC,CAAd,CAAR;AACH,KAFU,EAET,IAFS,CAAX;AAIH,GAND,EAME,EANF,EANW,CAcX;AACA;;AACA,WAASK,GAAT,GAAc;AACV;AACAJ,IAAAA,QAAQ,CAACD,KAAK,IAAGA,KAAK,GAAC,CAAf,CAAR,CAFU,CAGV;AACH,GApBU,CAqBX;AACA;AACA;;;AACA,sBACW;AAAA,4BACG;AAAA,mDAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAGG;AAAQ,MAAA,OAAO,EAAEK,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADX;AAQH;;GAhCQR,I;;KAAAA,I;AAiCT,eAAeA,IAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\n// 类式组件\r\n//   class Demo extends Component {\r\n//     state={\r\n//         count:0\r\n//     }\r\n//     add=()=>{\r\n//         this.setState(state=>({count:state.count+1}))\r\n//     }\r\n//     componentDidMount(){\r\n//         setInterval(()=>{\r\n//             this.setState(state=>({count:state.count+1}))\r\n//         },1000)\r\n//     }\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//           <h2>当前求和为{this.state.count}</h2>\r\n//           <button onClick={this.add}>点我+1</button>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\nfunction Demo(){\r\n    console.log('Demo');\r\n    const [count,setCount] = React.useState(0)\r\n    // const [name,setName] = React.useState('tom')\r\n\r\n    //相当于生命周期钩子函数，[count]代表只监测count，[]相当于componentDidMount\r\n    React.useEffect(()=>{\r\n        // console.log('@@@')\r\n        setInterval(()=>{\r\n            setCount(count=>count+1)\r\n        },1000)\r\n       \r\n    },[])\r\n\r\n    // console.log(count,setCount);\r\n    // 加的回调\r\n    function add(){\r\n        // setCount(count+1)//第一种写法\r\n        setCount(count=> count+1)\r\n        // console.log('你点击了加号');\r\n    }\r\n    // function changeName(){\r\n    //     setName('jack')\r\n    // }\r\n    return (\r\n               <div>\r\n                  <h2>当前求和为{count}</h2>\r\n                  {/* <h2>我的名字是：{name}</h2> */}\r\n                  <button onClick={add}>点我+1</button>\r\n                  {/* <button onClick={changeName}>点我改名</button> */}\r\n              </div>\r\n             )\r\n}\r\nexport default Demo\r\n"]},"metadata":{},"sourceType":"module"}