{"ast":null,"code":"var _jsxFileName = \"E:\\\\2022react\\\\react_extension\\\\src\\\\component\\\\3.hooks\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom'; // 类式组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Demo extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0\n    };\n    this.myRef = /*#__PURE__*/React.createRef();\n\n    this.add = () => {\n      this.setState(state => ({\n        count: state.count + 1\n      }));\n    };\n\n    this.unmount = () => {\n      ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n    };\n\n    this.show = () => {\n      alert(this.myRef.current.value);\n    };\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState(state => ({\n        count: state.count + 1\n      }));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: this.myRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\", this.state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.add,\n        children: \"\\u70B9\\u6211+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.unmount,\n        children: \"\\u5378\\u8F7D\\u7EC4\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.show,\n        children: \"\\u70B9\\u51FB\\u63D0\\u793A\\u6570\\u636E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n} // function Demo(){\n//     console.log('Demo');\n//     const [count,setCount] = React.useState(0)\n//     // const [name,setName] = React.useState('tom')\n//     //相当于生命周期钩子函数，[count]代表只监测count，[]相当于componentDidMount\n//     React.useEffect(()=>{\n//         // console.log('@@@')\n//         let timer = setInterval(()=>{\n//             setCount(count=>count+1)\n//         },1000)\n//         return ()=>{\n//             clearInterval(timer)\n//         }\n//     },[])\n//     // console.log(count,setCount);\n//     // 加的回调\n//     function add(){\n//         // setCount(count+1)//第一种写法\n//         setCount(count=> count+1)\n//         // console.log('你点击了加号');\n//     }\n//     // 卸载组件的回调\n//     function unmount(){\n//         ReactDOM.unmountComponentAtNode(document.getElementById('root'))\n//     }\n//     // function changeName(){\n//     //     setName('jack')\n//     // }\n//     return (\n//                <div>\n//                   <h2>当前求和为{count}</h2>\n//                   {/* <h2>我的名字是：{name}</h2> */}\n//                   <button onClick={add}>点我+1</button>\n//                   <button onClick={unmount}>卸载组件</button>\n//                   {/* <button onClick={changeName}>点我改名</button> */}\n//               </div>\n//              )\n// }\n\n\nexport default Demo;","map":{"version":3,"sources":["E:/2022react/react_extension/src/component/3.hooks/index.jsx"],"names":["React","Component","ReactDOM","Demo","state","count","myRef","createRef","add","setState","unmount","unmountComponentAtNode","document","getElementById","show","alert","current","value","componentDidMount","timer","setInterval","componentWillUnmount","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;;;AACE,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BG,KAD2B,GACrB;AACFC,MAAAA,KAAK,EAAC;AADJ,KADqB;AAAA,SAI3BC,KAJ2B,gBAInBN,KAAK,CAACO,SAAN,EAJmB;;AAAA,SAK3BC,GAL2B,GAKvB,MAAI;AACJ,WAAKC,QAAL,CAAcL,KAAK,KAAG;AAACC,QAAAA,KAAK,EAACD,KAAK,CAACC,KAAN,GAAY;AAAnB,OAAH,CAAnB;AACH,KAP0B;;AAAA,SAQ3BK,OAR2B,GAQnB,MAAI;AACRR,MAAAA,QAAQ,CAACS,sBAAT,CAAgCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC;AACH,KAV0B;;AAAA,SAW3BC,IAX2B,GAWtB,MAAI;AACLC,MAAAA,KAAK,CAAC,KAAKT,KAAL,CAAWU,OAAX,CAAmBC,KAApB,CAAL;AACH,KAb0B;AAAA;;AAc3BC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,GAAaC,WAAW,CAAC,MAAI;AACzB,WAAKX,QAAL,CAAcL,KAAK,KAAG;AAACC,QAAAA,KAAK,EAACD,KAAK,CAACC,KAAN,GAAY;AAAnB,OAAH,CAAnB;AACH,KAFuB,EAEtB,IAFsB,CAAxB;AAGH;;AACDgB,EAAAA,oBAAoB,GAAE;AAClBC,IAAAA,aAAa,CAAC,KAAKH,KAAN,CAAb;AACH;;AACHI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAE,KAAKjB;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,qDAAU,KAAKF,KAAL,CAAWC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKG,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,OAAO,EAAE,KAAKE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,QAAA,OAAO,EAAE,KAAKI,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAjC4B,C,CAoC/B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeX,IAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n// 类式组件\r\n  class Demo extends Component {\r\n    state={\r\n        count:0\r\n    }\r\n    myRef = React.createRef()\r\n    add=()=>{\r\n        this.setState(state=>({count:state.count+1}))\r\n    }\r\n    unmount=()=>{\r\n        ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n    }\r\n    show=()=>{\r\n        alert(this.myRef.current.value)\r\n    }\r\n    componentDidMount(){\r\n        this.timer = setInterval(()=>{\r\n            this.setState(state=>({count:state.count+1}))\r\n        },1000)\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.timer)\r\n    }\r\n  render() {\r\n    return (\r\n      <div>\r\n          <input type='text' ref={this.myRef}/>\r\n          <h2>当前求和为{this.state.count}</h2>\r\n          <button onClick={this.add}>点我+1</button>\r\n          <button onClick={this.unmount}>卸载组件</button>\r\n          <button onClick={this.show}>点击提示数据</button>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// function Demo(){\r\n//     console.log('Demo');\r\n//     const [count,setCount] = React.useState(0)\r\n//     // const [name,setName] = React.useState('tom')\r\n\r\n//     //相当于生命周期钩子函数，[count]代表只监测count，[]相当于componentDidMount\r\n//     React.useEffect(()=>{\r\n//         // console.log('@@@')\r\n//         let timer = setInterval(()=>{\r\n//             setCount(count=>count+1)\r\n//         },1000)\r\n//         return ()=>{\r\n//             clearInterval(timer)\r\n//         }\r\n       \r\n//     },[])\r\n\r\n//     // console.log(count,setCount);\r\n//     // 加的回调\r\n//     function add(){\r\n//         // setCount(count+1)//第一种写法\r\n//         setCount(count=> count+1)\r\n//         // console.log('你点击了加号');\r\n//     }\r\n//     // 卸载组件的回调\r\n//     function unmount(){\r\n//         ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n//     }\r\n//     // function changeName(){\r\n//     //     setName('jack')\r\n//     // }\r\n//     return (\r\n//                <div>\r\n//                   <h2>当前求和为{count}</h2>\r\n//                   {/* <h2>我的名字是：{name}</h2> */}\r\n//                   <button onClick={add}>点我+1</button>\r\n//                   <button onClick={unmount}>卸载组件</button>\r\n//                   {/* <button onClick={changeName}>点我改名</button> */}\r\n//               </div>\r\n//              )\r\n// }\r\nexport default Demo\r\n"]},"metadata":{},"sourceType":"module"}