{"ast":null,"code":"var _jsxFileName = \"E:\\\\2022react\\\\react_staging\\\\src\\\\App.jsx\";\n//创建“外壳”组件App。React,{Component}说明react文件有多种暴露的形式\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport List from \"./components/List\";\nimport Footer from \"./components/Footer\";\nimport './App.css'; //创建并暴露App组件,组件首字母大写，jsx也是组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      todos: [{\n        id: '001',\n        name: '吃饭',\n        done: true\n      }, {\n        id: '002',\n        name: '睡觉',\n        done: true\n      }, {\n        id: '003',\n        name: '打代码',\n        done: false\n      }, {\n        id: '004',\n        name: '逛街',\n        done: true\n      }]\n    };\n\n    this.addTodo = todoObj => {\n      // 获取原todos\n      const {\n        todos\n      } = this.state; // 追加一个todo\n\n      const newTodos = [todoObj, ...todos]; // 更新状态\n\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.updateTodo = (id, done) => {\n      //获取状态中的todos\n      const {\n        todos\n      } = this.state; // 匹配处理数据\n\n      const newTodos = todos.map(todoObj => {\n        //函数体\n        if (todoObj.id === id) return { ...todoObj,\n          done\n        };else return todoObj;\n      });\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.deleteTodo = id => {\n      // 获取原来的todos\n      const {\n        todos\n      } = this.state; //删除指定id的todo对象\n\n      const newTodos = todos.filter(todoObj => {\n        return todoObj.id !== id;\n      }); //更新状态\n\n      this.setState({\n        todos: newTodos\n      });\n    };\n  }\n\n  render() {\n    const {\n      todos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          addTodo: this.addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          todos: todos,\n          updateTodo: this.updateTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n} // //暴露App组件\n// export default App;","map":{"version":3,"sources":["E:/2022react/react_staging/src/App.jsx"],"names":["React","Component","Header","List","Footer","App","state","todos","id","name","done","addTodo","todoObj","newTodos","setState","updateTodo","map","deleteTodo","filter","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP,C,CACA;;;AACA,eAAe,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AAAA;AAAA;AAAA,SAItCK,KAJsC,GAI9B;AAACC,MAAAA,KAAK,EAAC,CACX;AAACC,QAAAA,EAAE,EAAC,KAAJ;AAAUC,QAAAA,IAAI,EAAC,IAAf;AAAoBC,QAAAA,IAAI,EAAC;AAAzB,OADW,EAEX;AAACF,QAAAA,EAAE,EAAC,KAAJ;AAAUC,QAAAA,IAAI,EAAC,IAAf;AAAoBC,QAAAA,IAAI,EAAC;AAAzB,OAFW,EAGX;AAACF,QAAAA,EAAE,EAAC,KAAJ;AAAUC,QAAAA,IAAI,EAAC,KAAf;AAAqBC,QAAAA,IAAI,EAAC;AAA1B,OAHW,EAIX;AAACF,QAAAA,EAAE,EAAC,KAAJ;AAAUC,QAAAA,IAAI,EAAC,IAAf;AAAoBC,QAAAA,IAAI,EAAC;AAAzB,OAJW;AAAP,KAJ8B;;AAAA,SAWtCC,OAXsC,GAW3BC,OAAD,IAAW;AACjB;AACA,YAAM;AAACL,QAAAA;AAAD,UAAU,KAAKD,KAArB,CAFiB,CAGjB;;AACA,YAAMO,QAAQ,GAAE,CAACD,OAAD,EAAS,GAAGL,KAAZ,CAAhB,CAJiB,CAKjB;;AACA,WAAKO,QAAL,CAAc;AACVP,QAAAA,KAAK,EAACM;AADI,OAAd;AAGH,KApBqC;;AAAA,SAsBtCE,UAtBsC,GAsBzB,CAACP,EAAD,EAAIE,IAAJ,KAAW;AACpB;AACA,YAAM;AAACH,QAAAA;AAAD,UAAU,KAAKD,KAArB,CAFoB,CAGpB;;AACA,YAAMO,QAAQ,GAAGN,KAAK,CAACS,GAAN,CAAWJ,OAAD,IAAW;AAClC;AACA,YAAGA,OAAO,CAACJ,EAAR,KAAeA,EAAlB,EAAsB,OAAO,EAAC,GAAGI,OAAJ;AAAYF,UAAAA;AAAZ,SAAP,CAAtB,KACK,OAAOE,OAAP;AACR,OAJgB,CAAjB;AAKA,WAAKE,QAAL,CAAc;AAACP,QAAAA,KAAK,EAACM;AAAP,OAAd;AACH,KAhCqC;;AAAA,SAiCtCI,UAjCsC,GAiCxBT,EAAD,IAAM;AACf;AACA,YAAM;AAACD,QAAAA;AAAD,UAAU,KAAKD,KAArB,CAFe,CAGf;;AACA,YAAMO,QAAQ,GAAGN,KAAK,CAACW,MAAN,CAAcN,OAAD,IAAW;AACrC,eAAOA,OAAO,CAACJ,EAAR,KAAeA,EAAtB;AACH,OAFgB,CAAjB,CAJe,CAOf;;AACA,WAAKM,QAAL,CAAc;AAACP,QAAAA,KAAK,EAACM;AAAP,OAAd;AACH,KA1CqC;AAAA;;AA2CtCM,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACZ,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKK;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEJ,KAAb;AAAoB,UAAA,UAAU,EAAE,KAAKQ;AAArC;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAxDqC,C,CA2D1C;AACA","sourcesContent":["//创建“外壳”组件App。React,{Component}说明react文件有多种暴露的形式\r\nimport React,{Component} from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport List from \"./components/List\";\r\nimport Footer from \"./components/Footer\";\r\nimport './App.css'\r\n//创建并暴露App组件,组件首字母大写，jsx也是组件\r\nexport default class App extends Component{\r\n    // 状态在哪里，操作状态的方法就在哪里\r\n\r\n    // 初始化状态\r\n    state = {todos:[\r\n        {id:'001',name:'吃饭',done:true},\r\n        {id:'002',name:'睡觉',done:true},\r\n        {id:'003',name:'打代码',done:false},\r\n        {id:'004',name:'逛街',done:true}\r\n    ]}\r\n    // addTodo用于添加一个todo，接收的参数是todo对象\r\n    addTodo = (todoObj)=>{\r\n        // 获取原todos\r\n        const {todos} = this.state\r\n        // 追加一个todo\r\n        const newTodos =[todoObj,...todos] \r\n        // 更新状态\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n    }\r\n    //updateTodo用于更新一个todo对象\r\n    updateTodo = (id,done)=>{\r\n        //获取状态中的todos\r\n        const {todos} = this.state\r\n        // 匹配处理数据\r\n        const newTodos = todos.map((todoObj)=>{\r\n            //函数体\r\n            if(todoObj.id === id) return {...todoObj,done}\r\n            else return todoObj\r\n        })\r\n        this.setState({todos:newTodos})\r\n    }\r\n    deleteTodo = (id)=>{\r\n        // 获取原来的todos\r\n        const {todos} = this.state\r\n        //删除指定id的todo对象\r\n        const newTodos = todos.filter((todoObj)=>{\r\n            return todoObj.id !== id\r\n        })\r\n        //更新状态\r\n        this.setState({todos:newTodos})\r\n    }\r\n    render(){\r\n        const {todos} = this.state\r\n        return(\r\n            <div className=\"todo-container\">\r\n                <div className=\"todo-wrap\">\r\n                    {/* 子传父，header->app父定义一个函数，子调用函数触发事件用props */}\r\n                    <Header addTodo={this.addTodo}/>\r\n                    {/* 父传子(app->list) */}\r\n                    <List todos={todos} updateTodo={this.updateTodo}/>\r\n                    <Footer/>\r\n                </div>\r\n          </div>\r\n        )\r\n    }\r\n\r\n}\r\n// //暴露App组件\r\n// export default App;"]},"metadata":{},"sourceType":"module"}